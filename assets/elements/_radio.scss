@each $size, $dim in $radio-dims {

	// Setting up radiomark
	.radiomark-#{$size} {
		position: absolute;
		top: 0;
		left: $dim / 8;
		height: $dim * 3 / 2;
		width: $dim * 3 / 2;
		background-color: $color-gray;
		border: 1px solid transparent;
		border-radius: 50%;
	}

	// Adding checked effect
	.label-#{$size} input:checked ~ .radiomark-#{$size} {
		background-color: $color-sky;
	}

	// Adding hover effect
	.label-#{$size} input:hover ~ .radiomark-#{$size} {
		background-color: $color-lightgray;
	}

	.label-#{$size} input:checked:hover ~ .radiomark-#{$size} {
		background-color: $color-lightsky;
	}

	.radiomark-#{$size}::after {
		content: "";
		position: absolute;
		display: none;
	}

	// Setting radiomark to be visible when radio is checked
	.label-#{$size} input:checked ~ .radiomark-#{$size}::after {
		display: block;
	}

	// Styling the radiomark
	.label-#{$size} .radiomark-#{$size}::after {
		top: $dim / 2;
		left: $dim / 2;
		width: $dim / 2;
		height: $dim / 2;
		border-radius: 50%;
		background: $color-checkmark;
	}

	// Disabled behavior
	.label-#{$size} input:disabled ~ .radiomark-#{$size}::after {
		display: block;
	}
	// Should have no hover effect as you can't interact with it
	.label-#{$size} input:disabled ~ .radiomark-#{$size} {
		display: block;
		background: $color-gray;
	}

	// Invalid behavior
	.label-#{$size} input:invalid ~ .radiomark-#{$size} {
		background-color: $color-red;
	}

	.label-#{$size} input:invalid:hover ~ .radiomark-#{$size} {
		background-color: $color-lightred;
	}

	// Focused behavior
  	.label-#{$size} input:focus ~ .radiomark-#{$size} {
		border: solid 1px $color-outline;
	}

  
}
